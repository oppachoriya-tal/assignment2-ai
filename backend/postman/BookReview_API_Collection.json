{
  "info": {
    "name": "BookReview API Collection",
    "description": "Complete API collection for BookReview Platform with AI-powered recommendations",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookId",
      "value": "",
      "type": "string"
    },
    {
      "key": "reviewId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books?page=1&limit=20&search=&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/search?q=harry&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["books", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "harry"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Trending Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/trending?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["books", "trending"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Book by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bookId', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/{{bookId}}",
              "host": ["{{baseUrl}}"],
              "path": ["books", "{{bookId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Books by Genre",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/genre/genre-id?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["books", "genre", "genre-id"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reviews",
      "item": [
        {
          "name": "Get All Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reviews?page=1&limit=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["reviews"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Review by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('reviewId', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookId\": \"{{bookId}}\",\n  \"rating\": 5,\n  \"reviewText\": \"This is an excellent book! I thoroughly enjoyed reading it and would highly recommend it to others. The plot was engaging and the characters were well-developed.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["reviews"]
            }
          },
          "response": []
        },
        {
          "name": "Update Review",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 4,\n  \"reviewText\": \"Updated review: This is a great book with some minor issues, but overall very enjoyable.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Review",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Vote Review Helpful",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isHelpful\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}/helpful",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}", "helpful"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reviews/user/{{userId}}?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "user", "{{userId}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"bio\": \"Avid reader and book reviewer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"Password123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "change-password"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Profile by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Favorites",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/favorites?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "favorites"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add Book to Favorites",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookId\": \"{{bookId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/favorites",
              "host": ["{{baseUrl}}"],
              "path": ["users", "favorites"]
            }
          },
          "response": []
        },
        {
          "name": "Remove Book from Favorites",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/favorites/{{bookId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "favorites", "{{bookId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Follow User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/follow",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "follow"]
            }
          },
          "response": []
        },
        {
          "name": "Unfollow User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/follow",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "follow"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Followers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/followers?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "followers"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Following",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/following?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "following"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Genres",
      "item": [
        {
          "name": "Get All Genres",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/genres",
              "host": ["{{baseUrl}}"],
              "path": ["genres"]
            }
          },
          "response": []
        },
        {
          "name": "Get Popular Genres",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/genres/popular?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["genres", "popular"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Genre by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/genres/genre-id",
              "host": ["{{baseUrl}}"],
              "path": ["genres", "genre-id"]
            }
          },
          "response": []
        },
        {
          "name": "Create Genre (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Science Fiction\",\n  \"description\": \"Fiction dealing with futuristic concepts\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/genres",
              "host": ["{{baseUrl}}"],
              "path": ["genres"]
            }
          },
          "response": []
        },
        {
          "name": "Update Genre (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Genre Name\",\n  \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/genres/genre-id",
              "host": ["{{baseUrl}}"],
              "path": ["genres", "genre-id"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Genre (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/genres/genre-id",
              "host": ["{{baseUrl}}"],
              "path": ["genres", "genre-id"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Recommendations",
      "item": [
        {
          "name": "Get Personalized Recommendations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Similar Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/similar/{{bookId}}?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "similar", "{{bookId}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Trending Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/trending?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "trending"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Genre Recommendations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/genre/genre-id?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "genre", "genre-id"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get New Releases",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/new-releases?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "new-releases"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Analyze Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewText\": \"This is an excellent book! I thoroughly enjoyed reading it and would highly recommend it to others.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recommendations/analyze-review",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "analyze-review"]
            }
          },
          "response": []
        },
        {
          "name": "Generate Book Description",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"author\": \"F. Scott Fitzgerald\",\n  \"existingDescription\": \"A classic American novel\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recommendations/generate-description",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "generate-description"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Community",
      "item": [
        {
          "name": "Add Comment to Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewId\": \"{{reviewId}}\",\n  \"content\": \"Great review! I completely agree with your points.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/community/comments",
              "host": ["{{baseUrl}}"],
              "path": ["community", "comments"]
            }
          },
          "response": []
        },
        {
          "name": "Get Review Comments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/comments/{{reviewId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["community", "comments", "{{reviewId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Follow User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/follow/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["community", "follow", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Unfollow User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/follow/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["community", "follow", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Activity Feed",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/activity-feed?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["community", "activity-feed"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/notifications?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["community", "notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/notifications/notification-id/read",
              "host": ["{{baseUrl}}"],
              "path": ["community", "notifications", "notification-id", "read"]
            }
          },
          "response": []
        },
        {
          "name": "Mark All Notifications as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/notifications/read-all",
              "host": ["{{baseUrl}}"],
              "path": ["community", "notifications", "read-all"]
            }
          },
          "response": []
        },
        {
          "name": "Report Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentType\": \"review\",\n  \"contentId\": \"{{reviewId}}\",\n  \"reason\": \"Inappropriate content\",\n  \"description\": \"This review contains offensive language\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/community/report-content",
              "host": ["{{baseUrl}}"],
              "path": ["community", "report-content"]
            }
          },
          "response": []
        },
        {
          "name": "Get Community Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/community/stats",
              "host": ["{{baseUrl}}"],
              "path": ["community", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Moderation",
      "item": [
        {
          "name": "Get Moderation Queue",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderation/queue?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "queue"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Moderate Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is a test review\",\n  \"contentType\": \"review\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/moderation/moderate-content",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "moderate-content"]
            }
          },
          "response": []
        },
        {
          "name": "Approve Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentType\": \"review\",\n  \"reason\": \"Content is appropriate\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/moderation/approve/content-id",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "approve", "content-id"]
            }
          },
          "response": []
        },
        {
          "name": "Reject Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentType\": \"review\",\n  \"reason\": \"Content violates community guidelines\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/moderation/reject/content-id",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "reject", "content-id"]
            }
          },
          "response": []
        },
        {
          "name": "Edit Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentType\": \"review\",\n  \"newContent\": \"This is an edited review\",\n  \"reason\": \"Removed inappropriate language\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/moderation/edit/content-id",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "edit", "content-id"]
            }
          },
          "response": []
        },
        {
          "name": "Get Moderation Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderation/stats",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Moderation History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderation/user-history/{{userId}}?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "user-history", "{{userId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Bulk Moderate Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentIds\": [\"content-1\", \"content-2\"],\n  \"contentType\": \"review\",\n  \"action\": \"approve\",\n  \"reason\": \"Bulk approval\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/moderation/bulk-moderate",
              "host": ["{{baseUrl}}"],
              "path": ["moderation", "bulk-moderate"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default values if not already set",
          "if (!pm.collectionVariables.get('baseUrl')) {",
          "    pm.collectionVariables.set('baseUrl', 'http://localhost:3000/api/v1');",
          "}"
        ]
      }
    }
  ]
}
